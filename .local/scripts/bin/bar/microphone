#!/bin/sh
# Script to toggle microhpne mute/unmute and meant to run with polybar as follow:
# [module/microphone]
# type = custom/script
# tail = true
# exec = microphone --listen
# click-left = microphone --toggle
#
# Credits to https://github.com/arcolinux/arcolinux-polybar/blob/master/etc/skel/.config/polybar/scripts/pavolume.sh
#

defaultSource=$(pactl info | grep "Default Source" | cut -f3 -d" ")

function output() {
	volume=$(pacmd list-sources | grep -A 10 $defaultSource | awk '/base volume/{ print $5 }')
	muted=$(pacmd list-sources | grep -A 10 $defaultSource | awk '/muted/{ print $2 }')

	if [ $muted = "yes" ]; then
		echo " $volume"
	else
		echo " $volume"
	fi
}

function toggle() {
	pactl set-source-mute $defaultSource toggle
}


function listen() {
    local firstRun=0

    # Listen for changes and immediately create new output for the bar.
    # This is faster than having the script on an interval.
    pactl subscribe 2>/dev/null | {
        while true; do
            {
                # If this is the first time just continue and print the current
                # state. Otherwise wait for events. This is to prevent the
                # module being empty until an event occurs.
                if [ $firstRun -eq 0 ]; then
                    firstRun=1
                else
                    read -r event || break
                    # Avoid double events
										if ! echo "$event" | grep -e "on card" -e "on source" -e "on server"; then
												continue
										fi
                fi
            } &>/dev/null
            output
        done
    }
}

case "$1" in
    --toggle)
        toggle
        ;;
    --listen)
        # Listen for changes and immediately create new output for the bar
        # This is faster than having the script on an interval
        listen
        ;;
    *)
        # By default print output for bar
        output
        ;;
esac
