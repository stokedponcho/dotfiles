;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; DO NOT EDIT THIS FILE DIRECTLY
;; This is a file generated from a literate programing source file located at
;; $DOOMDIR/config.org.
;; You should make any changes there and regenerate it from Emacs org-mode
;; using org-babel-tangle (C-c C-v t)

;; Place your private configuration here! Remember, you do not need to run 'doom
;; sync' after modifying this file!

;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets.
;; (setq user-full-name "John Doe"
;;      user-mail-address "john@doe.com")

;; Doom exposes five (optional) variables for controlling fonts in Doom. Here
;; are the three important ones:
;;
;; + `doom-font'
;; + `doom-variable-pitch-font'
;; + `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;;
;; They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
;; font string. You generally only need these two:
;; (setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
;;       doom-variable-pitch-font (font-spec :family "sans" :size 13))

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
;; (setq doom-theme 'doom-one)

;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
;; (setq org-directory "~/org/")

;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
;; (setq display-line-numbers-type t)

;; Here are some additional functions/macros that could help you configure Doom:
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.

(defvar my/frame-transparency '(95 . 95))
;;(defvar my/default-font "Fira Code Retina")
;;(defvar my/default-font-size 125)
(defvar my/config (expand-file-name "~/.config/emacs/config.org"))
(defvar my/org-directory (file-name-as-directory "~/Documents/org"))
(defvar my/org-notes (concat my/org-directory "notes.org"))
(defvar my/bookmarks (concat (expand-file-name "~/.config/") "bookmarks.txt"))
(defvar my/projects-root "~/Projects/")
(defvar my/projects '("~/Documents/org" "~/Projects" "~/Projects/00_learning"))

(setq-default
 indent-tabs-mode t									; Use tabs to indent
 tab-width 2  						  					; Set width for tabs
 cursor-in-non-selected-windows nil   ; Hide the cursor in inactive windows
 cursor-type '(hbar . 2)				      ; Underline-shaped cursor
 custom-unlispify-menu-entries nil    ; Prefer kebab-case for titles
 custom-unlispify-tag-names nil	  	; Prefer kebab-case for symbols
 delete-by-moving-to-trash t		    	; Delete files to trash
 fill-column 80				        	  	; Set width for automatic line breaks
 gc-cons-threshold (* 8 1024 1024)  	; We're not using Game Boys anymore
 help-window-select t				      	; Focus new help windows when opened
 uniquify-buffer-name-style 'forward	; Uniquify buffer names
 window-combination-resize t			    ; Resize windows proportionally
 x-stretch-cursor t					        ; Stretch cursor to the glyph width
 delete-by-moving-to-trash t)				; Delete files to trash

(setq
 undo-limit 80000000									; Raise undo-limit to 80 Mb
 evil-want-fine-undo t					      ; By default while in insert all changes are one big blob. Be more granular.
 auto-save-default t					        ; Auto... save...
 auto-save-list-file-prefix nil       ; Prevent tracking for auto-saves
 truncate-string-ellipsis "…")        ; Nice ellipsis

(blink-cursor-mode 0)								; Prefer a still cursor
(fset 'yes-or-no-p 'y-or-n-p)         ; Replace yes/no prompts with y/n
(global-subword-mode 1)               ; Iterate through CamelCase words
(set-default-coding-systems 'utf-8)   ; Default to utf-8 encoding

(global-subword-mode 1)							; Iterate through CamelCase words

;; (unless (string-match-p "^Power N/A" (battery))   ; On laptops...
;;   (display-battery-mode 1))                       ; it's nice to know how much power you have

(setq-default custom-file null-device)

(add-function
 :after after-focus-change-function
 (defun my/garbage-collect-maybe ()
   (unless (frame-focus-state) (garbage-collect))))

(after! evil
  (setq evil-vsplit-window-right t
  evil-split-window-below t))

;; (after! evil
;; 			(advice-add 'evil-window-split :after 'counsel-switch-buffer)
;; 			(advice-add 'evil-window-vsplit :after 'counsel-switch-buffer))

(defadvice! prompt-for-buffer (&rest _)
  :after '(evil-window-split evil-window-vsplit)
  (consult-buffer))

;; (use-package! dashboard
;;   :init
;;   (setq dashboard-items '(
;;         (recents . 5)
;;         (agenda . 5)
;;         )))

(setq doom-font (font-spec :family "JetBrains Mono" :size 15)
      doom-big-font (font-spec :family "JetBrains Mono" :size 26)
      doom-variable-pitch-font (font-spec :family "Overpass" :size 16)
      ;;doom-unicode-font (font-spec :family "JuliaMono")
      ;;doom-serif-font (font-spec :family "IBM Plex Mono" :weight 'light)
      )

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
(setq doom-theme 'doom-palenight)

(setq visible-bell t)	; Set up the visible bell
(column-number-mode t)

;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
(setq display-line-numbers-type 'relative)

(defun my/set-frame-transparency (frame)
  (set-frame-parameter frame 'alpha my/frame-transparency))

(add-to-list 'after-make-frame-functions #'my/set-frame-transparency)
(my/set-frame-transparency (selected-frame))

(global-set-key (kbd "<escape>") 'keyboard-escape-quit)

(map! :leader
      (:prefix ("-" . "open file")
       :desc "Edit doom config.org" "c" #'(lambda () (interactive) (find-file "~/.config/doom/config.org"))
       :desc "Edit doom init.el" "i" #'(lambda () (interactive) (find-file "~/.config/doom/init.el"))
       :desc "Edit doom packages.el" "p" #'(lambda () (interactive) (find-file "~/.config/doom/packages.el"))))

(use-package! projectile
  :config
  (setq
   projectile-project-search-path my/projects
   projectile-sort-order 'access-time)
  :custom
  (projectile-enable-caching t)
  )

(after! projectile
  (projectile-discover-projects-in-directory my/projects-root)
  (projectile-discover-projects-in-directory my/org-directory))

(use-package! org
  :custom
  (org-directory my/org-directory)
  (org-startup-folded 'nofold)
  (org-src-tab-acts-natively t)
  (org-catch-invisible-edits 'smart))

(with-eval-after-load 'org
  (defun my/org-add-structure-template (alias language)
    (add-to-list 'org-structure-template-alist `(,alias . ,(format "src %s" language))))

  (my/org-add-structure-template "sh" "shell")
  (my/org-add-structure-template "el" "emacs-lisp")
  (my/org-add-structure-template "py" "python")
  (my/org-add-structure-template "sc" "scheme")
  (my/org-add-structure-template "json" "json")
  (my/org-add-structure-template "yaml" "yaml"))

(with-eval-after-load 'org
  (org-babel-do-load-languages
   'org-babel-load-languages '(
             (emacs-lisp . t)
             (scheme . t)
             )))

(after! org
  (setq
   org-default-notes-files my/org-notes
   org-agenda-start-with-log-mode t
   org-ellipsis " ▼ "
   org-log-done 'time
   org-log-into-drawer t
   org-agenda-files (directory-files org-directory t "\\.org$")
   ;; org-agenda-files (directory-files-recursively org-directory "\\.org$")
   org-priority-default ?C
   ))

(after! org
  (setq org-agenda-custom-commands
  '(("n" "Dashboard - combines agenda and notes"
     ((agenda "" ((org-deadline-warning-days 7)))
      (tags-todo "+PRIORITY=\"A\""
           ((org-agenda-overriding-header "High Priority")))
      (tags-todo "+PRIORITY=\"B\"|+PRIORITY=\"C\""
           ((org-agenda-text-search-extra-files nil))))
     ))
  ))

(setcdr (assq `name +org-capture-frame-parameters) "capture")
